plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.lancedom'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(23)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'io.projectreactor.netty:reactor-netty:1.2.1'
	runtimeOnly "io.netty:netty-resolver-dns-native-macos:4.1.72.Final:osx-aarch_64"
	implementation 'org.hibernate.validator:hibernate-validator:8.0.2.Final'
	compileOnly 'org.projectlombok:lombok:1.18.36'

	annotationProcessor 'org.projectlombok:lombok:1.18.36' // required for reading the lombok generated code Getter, Setter, ToString

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

// Good read - https://tomgregory.com/gradle/annotation-processors-in-gradle-with-the-annotationprocessor-dependency-configuration/
tasks.withType(JavaCompile).configureEach {
	doFirst {
		println "AnnotationProcessorPath for $name is ${options.getAnnotationProcessorPath().getFiles()}"
	}
}
